// TickDb format as protobuf definitions.
package tickdb.file;

option optimize_for = LITE_RUNTIME;

enum Type {
  META = 0;
  DATA = 1;
};

// Simple key with fixed width bytes.
// The key is constructed such that it is
// sortable by B+ tree in kyotocabinet.
// The first is the row type (data or metadata)
// followed by the timestamp in micros and
// then the computed ticker id.
message Key  {
  required Type row_type = 1 [default = DATA];
  required fixed64 time_stamp = 2;
  required fixed32 ticker_id = 3;
}

enum MessageType {
  // Reserved value for the protobuffer
  // that describes the actual message proto.
  PROTO_DEF = 0;
};

message Value {
  required uint32 message_type_code = 1;
  required bytes value_bytes = 2;
  optional string str_value = 3;
};
