
package com.amazonaws.sdb.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ItemCount" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="ItemNamesSizeBytes" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="AttributeNameCount" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="AttributeNamesSizeBytes" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="AttributeValueCount" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="AttributeValuesSizeBytes" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Timestamp" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Mon May 11 14:17:05 PDT 2009
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "itemCount",
    "itemNamesSizeBytes",
    "attributeNameCount",
    "attributeNamesSizeBytes",
    "attributeValueCount",
    "attributeValuesSizeBytes",
    "timestamp"
})
@XmlRootElement(name = "DomainMetadataResult")
public class DomainMetadataResult {

    @XmlElement(name = "ItemCount", required = true)
    protected String itemCount;
    @XmlElement(name = "ItemNamesSizeBytes", required = true)
    protected String itemNamesSizeBytes;
    @XmlElement(name = "AttributeNameCount", required = true)
    protected String attributeNameCount;
    @XmlElement(name = "AttributeNamesSizeBytes", required = true)
    protected String attributeNamesSizeBytes;
    @XmlElement(name = "AttributeValueCount", required = true)
    protected String attributeValueCount;
    @XmlElement(name = "AttributeValuesSizeBytes", required = true)
    protected String attributeValuesSizeBytes;
    @XmlElement(name = "Timestamp", required = true)
    protected String timestamp;

    /**
     * Default constructor
     * 
     */
    public DomainMetadataResult() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public DomainMetadataResult(final String itemCount, final String itemNamesSizeBytes, final String attributeNameCount, final String attributeNamesSizeBytes, final String attributeValueCount, final String attributeValuesSizeBytes, final String timestamp) {
        this.itemCount = itemCount;
        this.itemNamesSizeBytes = itemNamesSizeBytes;
        this.attributeNameCount = attributeNameCount;
        this.attributeNamesSizeBytes = attributeNamesSizeBytes;
        this.attributeValueCount = attributeValueCount;
        this.attributeValuesSizeBytes = attributeValuesSizeBytes;
        this.timestamp = timestamp;
    }

    /**
     * Gets the value of the itemCount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getItemCount() {
        return itemCount;
    }

    /**
     * Sets the value of the itemCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setItemCount(String value) {
        this.itemCount = value;
    }

    public boolean isSetItemCount() {
        return (this.itemCount!= null);
    }

    /**
     * Gets the value of the itemNamesSizeBytes property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getItemNamesSizeBytes() {
        return itemNamesSizeBytes;
    }

    /**
     * Sets the value of the itemNamesSizeBytes property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setItemNamesSizeBytes(String value) {
        this.itemNamesSizeBytes = value;
    }

    public boolean isSetItemNamesSizeBytes() {
        return (this.itemNamesSizeBytes!= null);
    }

    /**
     * Gets the value of the attributeNameCount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAttributeNameCount() {
        return attributeNameCount;
    }

    /**
     * Sets the value of the attributeNameCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAttributeNameCount(String value) {
        this.attributeNameCount = value;
    }

    public boolean isSetAttributeNameCount() {
        return (this.attributeNameCount!= null);
    }

    /**
     * Gets the value of the attributeNamesSizeBytes property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAttributeNamesSizeBytes() {
        return attributeNamesSizeBytes;
    }

    /**
     * Sets the value of the attributeNamesSizeBytes property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAttributeNamesSizeBytes(String value) {
        this.attributeNamesSizeBytes = value;
    }

    public boolean isSetAttributeNamesSizeBytes() {
        return (this.attributeNamesSizeBytes!= null);
    }

    /**
     * Gets the value of the attributeValueCount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAttributeValueCount() {
        return attributeValueCount;
    }

    /**
     * Sets the value of the attributeValueCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAttributeValueCount(String value) {
        this.attributeValueCount = value;
    }

    public boolean isSetAttributeValueCount() {
        return (this.attributeValueCount!= null);
    }

    /**
     * Gets the value of the attributeValuesSizeBytes property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAttributeValuesSizeBytes() {
        return attributeValuesSizeBytes;
    }

    /**
     * Sets the value of the attributeValuesSizeBytes property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAttributeValuesSizeBytes(String value) {
        this.attributeValuesSizeBytes = value;
    }

    public boolean isSetAttributeValuesSizeBytes() {
        return (this.attributeValuesSizeBytes!= null);
    }

    /**
     * Gets the value of the timestamp property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * Sets the value of the timestamp property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimestamp(String value) {
        this.timestamp = value;
    }

    public boolean isSetTimestamp() {
        return (this.timestamp!= null);
    }

    /**
     * Sets the value of the ItemCount property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withItemCount(String value) {
        setItemCount(value);
        return this;
    }

    /**
     * Sets the value of the ItemNamesSizeBytes property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withItemNamesSizeBytes(String value) {
        setItemNamesSizeBytes(value);
        return this;
    }

    /**
     * Sets the value of the AttributeNameCount property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withAttributeNameCount(String value) {
        setAttributeNameCount(value);
        return this;
    }

    /**
     * Sets the value of the AttributeNamesSizeBytes property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withAttributeNamesSizeBytes(String value) {
        setAttributeNamesSizeBytes(value);
        return this;
    }

    /**
     * Sets the value of the AttributeValueCount property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withAttributeValueCount(String value) {
        setAttributeValueCount(value);
        return this;
    }

    /**
     * Sets the value of the AttributeValuesSizeBytes property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withAttributeValuesSizeBytes(String value) {
        setAttributeValuesSizeBytes(value);
        return this;
    }

    /**
     * Sets the value of the Timestamp property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public DomainMetadataResult withTimestamp(String value) {
        setTimestamp(value);
        return this;
    }
    

    /**
     * 
     * XML fragment representation of this object
     * 
     * @return XML fragment for this object. Name for outer
     * tag expected to be set by calling method. This fragment
     * returns inner properties representation only
     */
    protected String toXMLFragment() {
        StringBuffer xml = new StringBuffer();
        if (isSetItemCount()) {
            xml.append("<ItemCount>");
            xml.append(escapeXML(getItemCount()));
            xml.append("</ItemCount>");
        }
        if (isSetItemNamesSizeBytes()) {
            xml.append("<ItemNamesSizeBytes>");
            xml.append(escapeXML(getItemNamesSizeBytes()));
            xml.append("</ItemNamesSizeBytes>");
        }
        if (isSetAttributeNameCount()) {
            xml.append("<AttributeNameCount>");
            xml.append(escapeXML(getAttributeNameCount()));
            xml.append("</AttributeNameCount>");
        }
        if (isSetAttributeNamesSizeBytes()) {
            xml.append("<AttributeNamesSizeBytes>");
            xml.append(escapeXML(getAttributeNamesSizeBytes()));
            xml.append("</AttributeNamesSizeBytes>");
        }
        if (isSetAttributeValueCount()) {
            xml.append("<AttributeValueCount>");
            xml.append(escapeXML(getAttributeValueCount()));
            xml.append("</AttributeValueCount>");
        }
        if (isSetAttributeValuesSizeBytes()) {
            xml.append("<AttributeValuesSizeBytes>");
            xml.append(escapeXML(getAttributeValuesSizeBytes()));
            xml.append("</AttributeValuesSizeBytes>");
        }
        if (isSetTimestamp()) {
            xml.append("<Timestamp>");
            xml.append(escapeXML(getTimestamp()));
            xml.append("</Timestamp>");
        }
        return xml.toString();
    }

    /**
     * 
     * Escape XML special characters
     */
    private String escapeXML(String string) {
        StringBuffer sb = new StringBuffer();
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '&':
                sb.append("&amp;");
                break;
            case '<':
                sb.append("&lt;");
                break;
            case '>':
                sb.append("&gt;");
                break;
            case '\'':
                sb.append("&#039;");
                break;
            case '"':
                sb.append("&quot;");
                break;
            default:
                sb.append(c);
            }
        }
        return sb.toString();
    }



    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetItemCount()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("ItemCount"));
            json.append(" : ");
            json.append(quoteJSON(getItemCount()));
            first = false;
        }
        if (isSetItemNamesSizeBytes()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("ItemNamesSizeBytes"));
            json.append(" : ");
            json.append(quoteJSON(getItemNamesSizeBytes()));
            first = false;
        }
        if (isSetAttributeNameCount()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("AttributeNameCount"));
            json.append(" : ");
            json.append(quoteJSON(getAttributeNameCount()));
            first = false;
        }
        if (isSetAttributeNamesSizeBytes()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("AttributeNamesSizeBytes"));
            json.append(" : ");
            json.append(quoteJSON(getAttributeNamesSizeBytes()));
            first = false;
        }
        if (isSetAttributeValueCount()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("AttributeValueCount"));
            json.append(" : ");
            json.append(quoteJSON(getAttributeValueCount()));
            first = false;
        }
        if (isSetAttributeValuesSizeBytes()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("AttributeValuesSizeBytes"));
            json.append(" : ");
            json.append(quoteJSON(getAttributeValuesSizeBytes()));
            first = false;
        }
        if (isSetTimestamp()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Timestamp"));
            json.append(" : ");
            json.append(quoteJSON(getTimestamp()));
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
