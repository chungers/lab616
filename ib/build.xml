<project name="ib" default="generate" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="name" value="ib" />
 
  <property environment="env"/>
  
  <property name="version" value="0.1" />
  <property name="final.name" value="${name}-${version}"/>
  
  <property name="src.dir" value="${basedir}/java" />
  <property name="avro.schema.dir" value="${basedir}/schema" />
 
  <property name="lib.dir" value="${basedir}/lib" />
 
  <property name="build.dir" value="${basedir}/target" />
  <property name="generated.dir" value="${basedir}/genfiles" />
  <property name="avro.generated.dir" value="${basedir}/genfiles" />
  <property name="build.classes" value="${basedir}/classes"/>
 
  <property name="ivy.version" value="2.1.0-rc2"/>
  <property name="ivy.url"
            value="http://repo2.maven.org/maven2/org/apache/ivy/ivy" />
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.dir" value="${build.dir}/ivy"/>
 
  <!-- the normal classpath -->
  <path id="java.classpath">
    <pathelement location="${build.classes}"/>
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${ant.home}/lib">
      <include name="ant.jar" />
    </fileset>
    <fileset dir="${ivy.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>
 
  <!-- ====================================================== -->
  <!-- Generate and compile the Java files                    -->
  <!-- ====================================================== -->
  <target name="init">    
    <mkdir dir="${lib.dir}" />
 
    <mkdir dir="${build.dir}" />
    <mkdir dir="${generated.dir}" />
    <mkdir dir="${avro.generated.dir}" />
    <mkdir dir="${build.classes}" />
 
    <mkdir dir="${ivy.dir}"/>
    <condition property="ivy.jar.exists">
      <available file="${ivy.dir}/ivy-${ivy.version}.jar"/>
    </condition>
 
    <tstamp>
      <format property="build.time" pattern="MM/dd/yyyy HH:mm zz" timezone="GMT"/>
      <format property="year" pattern="yyyy" timezone="GMT"/>
    </tstamp>
  </target>
  
  <target name="ivy-download" unless="ivy.jar.exists" depends="init">
    <delete dir="${ivy.dir}"
            includes="ivy-*.jar" excludes="ivy-${ivy.version}.jar"/>
    <get src="${ivy.url}/${ivy.version}/ivy-${ivy.version}.jar"
         dest="${ivy.dir}/ivy-${ivy.version}.jar" usetimestamp="true"/>
  </target>
 
  <target name="ivy-init" depends="ivy-download" unless="ivy.initialized">
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="java.classpath"/>
    <!-- ensure that ivy taskdef is only run once, otw ant will error -->
    <property name="ivy.initialized" value="true"/>
  </target>
 
  <target name="ivy-retrieve" depends="init,ivy-init">
    <ivy:retrieve type="jar" conf="default"
                  pattern="${ivy.dir}/[artifact]-[revision].[ext]"/>
  </target>
 
  <target name="generate" depends="ivy-retrieve">
    <taskdef name="protocol"
             classname="org.apache.avro.specific.ProtocolTask">
      <classpath refid="java.classpath" />
    </taskdef>
    <taskdef name="schema" classname="org.apache.avro.specific.SchemaTask">
      <classpath refid="java.classpath" />
    </taskdef>
    <taskdef name="paranamer" 
             classname="com.thoughtworks.paranamer.ant.ParanamerGeneratorTask">
      <classpath refid="java.classpath" />
    </taskdef>
 
    <protocol destdir="${avro.generated.dir}">
      <fileset dir="${avro.schema.dir}">
        <include name="**/*.avpr" />
      </fileset>
    </protocol>
    
    <schema destdir="${avro.generated.dir}">
      <fileset dir="${avro.schema.dir}">
        <include name="**/*.avsc" />
      </fileset>
    </schema>
  </target>
 
  <target name="compile-generated" depends="ivy-retrieve">
    <javac srcdir="${avro.generated.dir}" destdir="${build.classes}">
      <classpath refid="java.classpath"/>
    </javac>
 
    <paranamer sourceDirectory="${avro.generated.dir}"
               outputDirectory="${build.classes}"/>
  </target>
 
  <target name="compile-app" depends="ivy-retrieve">
    <javac srcdir="${src.dir}" destdir="${build.classes}">
      <classpath refid="java.classpath"/>
    </javac>
  </target>
 
  <target name="compile" depends="generate,compile-generated,compile-app"/>
 
  <!-- ====================================================== -->
  <!-- Clean.  Delete the build files, and their directories  -->
  <!-- ====================================================== -->
  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>
 
</project>