// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.lab616.trading.domain;

public final class DomainProtos {
  private DomainProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Source
      implements com.google.protobuf.ProtocolMessageEnum {
    TWS_API(0, 0),
    SIMULATED(1, 1),
    BACKTEST(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static Source valueOf(int value) {
      switch (value) {
        case 0: return TWS_API;
        case 1: return SIMULATED;
        case 2: return BACKTEST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Source>() {
            public Source findValueByNumber(int number) {
              return Source.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.lab616.trading.domain.DomainProtos.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Source[] VALUES = {
      TWS_API, SIMULATED, BACKTEST, 
    };
    public static Source valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private Source(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.getDescriptor();
    }
  }
  
  public static final class Range extends
      com.google.protobuf.GeneratedMessage {
    // Use Range.newBuilder() to construct.
    private Range() {}
    
    private static final Range defaultInstance = new Range();
    public static Range getDefaultInstance() {
      return defaultInstance;
    }
    
    public Range getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lab616.trading.domain.DomainProtos.internal_static_trading_Range_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lab616.trading.domain.DomainProtos.internal_static_trading_Range_fieldAccessorTable;
    }
    
    // required fixed64 start = 1;
    public static final int START_FIELD_NUMBER = 1;
    private boolean hasStart;
    private long start_ = 0L;
    public boolean hasStart() { return hasStart; }
    public long getStart() { return start_; }
    
    // required fixed64 end = 2;
    public static final int END_FIELD_NUMBER = 2;
    private boolean hasEnd;
    private long end_ = 0L;
    public boolean hasEnd() { return hasEnd; }
    public long getEnd() { return end_; }
    
    public final boolean isInitialized() {
      if (!hasStart) return false;
      if (!hasEnd) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasStart()) {
        output.writeFixed64(1, getStart());
      }
      if (hasEnd()) {
        output.writeFixed64(2, getEnd());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getStart());
      }
      if (hasEnd()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, getEnd());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Range parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lab616.trading.domain.DomainProtos.Range prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.lab616.trading.domain.DomainProtos.Range result;
      
      // Construct using com.lab616.trading.domain.DomainProtos.Range.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.lab616.trading.domain.DomainProtos.Range();
        return builder;
      }
      
      protected com.lab616.trading.domain.DomainProtos.Range internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.lab616.trading.domain.DomainProtos.Range();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lab616.trading.domain.DomainProtos.Range.getDescriptor();
      }
      
      public com.lab616.trading.domain.DomainProtos.Range getDefaultInstanceForType() {
        return com.lab616.trading.domain.DomainProtos.Range.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.lab616.trading.domain.DomainProtos.Range build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.lab616.trading.domain.DomainProtos.Range buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.lab616.trading.domain.DomainProtos.Range buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.lab616.trading.domain.DomainProtos.Range returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lab616.trading.domain.DomainProtos.Range) {
          return mergeFrom((com.lab616.trading.domain.DomainProtos.Range)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.lab616.trading.domain.DomainProtos.Range other) {
        if (other == com.lab616.trading.domain.DomainProtos.Range.getDefaultInstance()) return this;
        if (other.hasStart()) {
          setStart(other.getStart());
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setStart(input.readFixed64());
              break;
            }
            case 17: {
              setEnd(input.readFixed64());
              break;
            }
          }
        }
      }
      
      
      // required fixed64 start = 1;
      public boolean hasStart() {
        return result.hasStart();
      }
      public long getStart() {
        return result.getStart();
      }
      public Builder setStart(long value) {
        result.hasStart = true;
        result.start_ = value;
        return this;
      }
      public Builder clearStart() {
        result.hasStart = false;
        result.start_ = 0L;
        return this;
      }
      
      // required fixed64 end = 2;
      public boolean hasEnd() {
        return result.hasEnd();
      }
      public long getEnd() {
        return result.getEnd();
      }
      public Builder setEnd(long value) {
        result.hasEnd = true;
        result.end_ = value;
        return this;
      }
      public Builder clearEnd() {
        result.hasEnd = false;
        result.end_ = 0L;
        return this;
      }
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.getDescriptor();
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.internalForceInit();
    }
  }
  
  public static final class Bar extends
      com.google.protobuf.GeneratedMessage {
    // Use Bar.newBuilder() to construct.
    private Bar() {}
    
    private static final Bar defaultInstance = new Bar();
    public static Bar getDefaultInstance() {
      return defaultInstance;
    }
    
    public Bar getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lab616.trading.domain.DomainProtos.internal_static_trading_Bar_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lab616.trading.domain.DomainProtos.internal_static_trading_Bar_fieldAccessorTable;
    }
    
    // required .trading.Range range = 1;
    public static final int RANGE_FIELD_NUMBER = 1;
    private boolean hasRange;
    private com.lab616.trading.domain.DomainProtos.Range range_ = com.lab616.trading.domain.DomainProtos.Range.getDefaultInstance();
    public boolean hasRange() { return hasRange; }
    public com.lab616.trading.domain.DomainProtos.Range getRange() { return range_; }
    
    // required uint64 tickerId = 2;
    public static final int TICKERID_FIELD_NUMBER = 2;
    private boolean hasTickerId;
    private long tickerId_ = 0L;
    public boolean hasTickerId() { return hasTickerId; }
    public long getTickerId() { return tickerId_; }
    
    // required double first = 3;
    public static final int FIRST_FIELD_NUMBER = 3;
    private boolean hasFirst;
    private double first_ = 0D;
    public boolean hasFirst() { return hasFirst; }
    public double getFirst() { return first_; }
    
    // required double last = 4;
    public static final int LAST_FIELD_NUMBER = 4;
    private boolean hasLast;
    private double last_ = 0D;
    public boolean hasLast() { return hasLast; }
    public double getLast() { return last_; }
    
    // required double min = 5;
    public static final int MIN_FIELD_NUMBER = 5;
    private boolean hasMin;
    private double min_ = 0D;
    public boolean hasMin() { return hasMin; }
    public double getMin() { return min_; }
    
    // required double max = 6;
    public static final int MAX_FIELD_NUMBER = 6;
    private boolean hasMax;
    private double max_ = 0D;
    public boolean hasMax() { return hasMax; }
    public double getMax() { return max_; }
    
    // optional uint32 volume = 7;
    public static final int VOLUME_FIELD_NUMBER = 7;
    private boolean hasVolume;
    private int volume_ = 0;
    public boolean hasVolume() { return hasVolume; }
    public int getVolume() { return volume_; }
    
    // optional double wap = 8;
    public static final int WAP_FIELD_NUMBER = 8;
    private boolean hasWap;
    private double wap_ = 0D;
    public boolean hasWap() { return hasWap; }
    public double getWap() { return wap_; }
    
    // optional uint32 count = 9;
    public static final int COUNT_FIELD_NUMBER = 9;
    private boolean hasCount;
    private int count_ = 0;
    public boolean hasCount() { return hasCount; }
    public int getCount() { return count_; }
    
    // optional .trading.Source source = 10;
    public static final int SOURCE_FIELD_NUMBER = 10;
    private boolean hasSource;
    private com.lab616.trading.domain.DomainProtos.Source source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
    public boolean hasSource() { return hasSource; }
    public com.lab616.trading.domain.DomainProtos.Source getSource() { return source_; }
    
    public final boolean isInitialized() {
      if (!hasRange) return false;
      if (!hasTickerId) return false;
      if (!hasFirst) return false;
      if (!hasLast) return false;
      if (!hasMin) return false;
      if (!hasMax) return false;
      if (!getRange().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasRange()) {
        output.writeMessage(1, getRange());
      }
      if (hasTickerId()) {
        output.writeUInt64(2, getTickerId());
      }
      if (hasFirst()) {
        output.writeDouble(3, getFirst());
      }
      if (hasLast()) {
        output.writeDouble(4, getLast());
      }
      if (hasMin()) {
        output.writeDouble(5, getMin());
      }
      if (hasMax()) {
        output.writeDouble(6, getMax());
      }
      if (hasVolume()) {
        output.writeUInt32(7, getVolume());
      }
      if (hasWap()) {
        output.writeDouble(8, getWap());
      }
      if (hasCount()) {
        output.writeUInt32(9, getCount());
      }
      if (hasSource()) {
        output.writeEnum(10, getSource().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRange()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRange());
      }
      if (hasTickerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getTickerId());
      }
      if (hasFirst()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getFirst());
      }
      if (hasLast()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getLast());
      }
      if (hasMin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, getMin());
      }
      if (hasMax()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, getMax());
      }
      if (hasVolume()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, getVolume());
      }
      if (hasWap()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, getWap());
      }
      if (hasCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, getCount());
      }
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, getSource().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lab616.trading.domain.DomainProtos.Bar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.lab616.trading.domain.DomainProtos.Bar result;
      
      // Construct using com.lab616.trading.domain.DomainProtos.Bar.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.lab616.trading.domain.DomainProtos.Bar();
        return builder;
      }
      
      protected com.lab616.trading.domain.DomainProtos.Bar internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.lab616.trading.domain.DomainProtos.Bar();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lab616.trading.domain.DomainProtos.Bar.getDescriptor();
      }
      
      public com.lab616.trading.domain.DomainProtos.Bar getDefaultInstanceForType() {
        return com.lab616.trading.domain.DomainProtos.Bar.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.lab616.trading.domain.DomainProtos.Bar build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.lab616.trading.domain.DomainProtos.Bar buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.lab616.trading.domain.DomainProtos.Bar buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.lab616.trading.domain.DomainProtos.Bar returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lab616.trading.domain.DomainProtos.Bar) {
          return mergeFrom((com.lab616.trading.domain.DomainProtos.Bar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.lab616.trading.domain.DomainProtos.Bar other) {
        if (other == com.lab616.trading.domain.DomainProtos.Bar.getDefaultInstance()) return this;
        if (other.hasRange()) {
          mergeRange(other.getRange());
        }
        if (other.hasTickerId()) {
          setTickerId(other.getTickerId());
        }
        if (other.hasFirst()) {
          setFirst(other.getFirst());
        }
        if (other.hasLast()) {
          setLast(other.getLast());
        }
        if (other.hasMin()) {
          setMin(other.getMin());
        }
        if (other.hasMax()) {
          setMax(other.getMax());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasWap()) {
          setWap(other.getWap());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.lab616.trading.domain.DomainProtos.Range.Builder subBuilder = com.lab616.trading.domain.DomainProtos.Range.newBuilder();
              if (hasRange()) {
                subBuilder.mergeFrom(getRange());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRange(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setTickerId(input.readUInt64());
              break;
            }
            case 25: {
              setFirst(input.readDouble());
              break;
            }
            case 33: {
              setLast(input.readDouble());
              break;
            }
            case 41: {
              setMin(input.readDouble());
              break;
            }
            case 49: {
              setMax(input.readDouble());
              break;
            }
            case 56: {
              setVolume(input.readUInt32());
              break;
            }
            case 65: {
              setWap(input.readDouble());
              break;
            }
            case 72: {
              setCount(input.readUInt32());
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Source value = com.lab616.trading.domain.DomainProtos.Source.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                setSource(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required .trading.Range range = 1;
      public boolean hasRange() {
        return result.hasRange();
      }
      public com.lab616.trading.domain.DomainProtos.Range getRange() {
        return result.getRange();
      }
      public Builder setRange(com.lab616.trading.domain.DomainProtos.Range value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRange = true;
        result.range_ = value;
        return this;
      }
      public Builder setRange(com.lab616.trading.domain.DomainProtos.Range.Builder builderForValue) {
        result.hasRange = true;
        result.range_ = builderForValue.build();
        return this;
      }
      public Builder mergeRange(com.lab616.trading.domain.DomainProtos.Range value) {
        if (result.hasRange() &&
            result.range_ != com.lab616.trading.domain.DomainProtos.Range.getDefaultInstance()) {
          result.range_ =
            com.lab616.trading.domain.DomainProtos.Range.newBuilder(result.range_).mergeFrom(value).buildPartial();
        } else {
          result.range_ = value;
        }
        result.hasRange = true;
        return this;
      }
      public Builder clearRange() {
        result.hasRange = false;
        result.range_ = com.lab616.trading.domain.DomainProtos.Range.getDefaultInstance();
        return this;
      }
      
      // required uint64 tickerId = 2;
      public boolean hasTickerId() {
        return result.hasTickerId();
      }
      public long getTickerId() {
        return result.getTickerId();
      }
      public Builder setTickerId(long value) {
        result.hasTickerId = true;
        result.tickerId_ = value;
        return this;
      }
      public Builder clearTickerId() {
        result.hasTickerId = false;
        result.tickerId_ = 0L;
        return this;
      }
      
      // required double first = 3;
      public boolean hasFirst() {
        return result.hasFirst();
      }
      public double getFirst() {
        return result.getFirst();
      }
      public Builder setFirst(double value) {
        result.hasFirst = true;
        result.first_ = value;
        return this;
      }
      public Builder clearFirst() {
        result.hasFirst = false;
        result.first_ = 0D;
        return this;
      }
      
      // required double last = 4;
      public boolean hasLast() {
        return result.hasLast();
      }
      public double getLast() {
        return result.getLast();
      }
      public Builder setLast(double value) {
        result.hasLast = true;
        result.last_ = value;
        return this;
      }
      public Builder clearLast() {
        result.hasLast = false;
        result.last_ = 0D;
        return this;
      }
      
      // required double min = 5;
      public boolean hasMin() {
        return result.hasMin();
      }
      public double getMin() {
        return result.getMin();
      }
      public Builder setMin(double value) {
        result.hasMin = true;
        result.min_ = value;
        return this;
      }
      public Builder clearMin() {
        result.hasMin = false;
        result.min_ = 0D;
        return this;
      }
      
      // required double max = 6;
      public boolean hasMax() {
        return result.hasMax();
      }
      public double getMax() {
        return result.getMax();
      }
      public Builder setMax(double value) {
        result.hasMax = true;
        result.max_ = value;
        return this;
      }
      public Builder clearMax() {
        result.hasMax = false;
        result.max_ = 0D;
        return this;
      }
      
      // optional uint32 volume = 7;
      public boolean hasVolume() {
        return result.hasVolume();
      }
      public int getVolume() {
        return result.getVolume();
      }
      public Builder setVolume(int value) {
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder clearVolume() {
        result.hasVolume = false;
        result.volume_ = 0;
        return this;
      }
      
      // optional double wap = 8;
      public boolean hasWap() {
        return result.hasWap();
      }
      public double getWap() {
        return result.getWap();
      }
      public Builder setWap(double value) {
        result.hasWap = true;
        result.wap_ = value;
        return this;
      }
      public Builder clearWap() {
        result.hasWap = false;
        result.wap_ = 0D;
        return this;
      }
      
      // optional uint32 count = 9;
      public boolean hasCount() {
        return result.hasCount();
      }
      public int getCount() {
        return result.getCount();
      }
      public Builder setCount(int value) {
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder clearCount() {
        result.hasCount = false;
        result.count_ = 0;
        return this;
      }
      
      // optional .trading.Source source = 10;
      public boolean hasSource() {
        return result.hasSource();
      }
      public com.lab616.trading.domain.DomainProtos.Source getSource() {
        return result.getSource();
      }
      public Builder setSource(com.lab616.trading.domain.DomainProtos.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
        return this;
      }
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.getDescriptor();
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.internalForceInit();
    }
  }
  
  public static final class Tick extends
      com.google.protobuf.GeneratedMessage {
    // Use Tick.newBuilder() to construct.
    private Tick() {}
    
    private static final Tick defaultInstance = new Tick();
    public static Tick getDefaultInstance() {
      return defaultInstance;
    }
    
    public Tick getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lab616.trading.domain.DomainProtos.internal_static_trading_Tick_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lab616.trading.domain.DomainProtos.internal_static_trading_Tick_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      BID_SIZE(0, 0),
      BID(1, 1),
      ASK(2, 2),
      ASK_SIZE(3, 3),
      LAST(4, 4),
      LAST_SIZE(5, 5),
      HIGH(6, 6),
      LOW(7, 7),
      VOLUME(8, 8),
      CLOSE(9, 9),
      BID_OPTION(10, 10),
      ASK_OPTION(11, 11),
      LAST_OPTION(12, 12),
      MODEL_OPTION(13, 13),
      OPEN(14, 14),
      LOW_13_WEEK(15, 15),
      HIGH_13_WEEK(16, 16),
      LOW_26_WEEK(17, 17),
      HIGH_26_WEEK(18, 18),
      LOW_52_WEEK(19, 19),
      HIGH_52_WEEK(20, 20),
      AVG_VOLUME(21, 21),
      OPEN_INTEREST(22, 22),
      OPTION_HISTORICAL_VOL(23, 23),
      OPTION_IMPLIED_VOL(24, 24),
      OPTION_BID_EXCH(25, 25),
      OPTION_ASK_EXCH(26, 26),
      OPTION_CALL_OPEN_INTEREST(27, 27),
      OPTION_PUT_OPEN_INTEREST(28, 28),
      OPTION_CALL_VOLUME(29, 29),
      OPTION_PUT_VOLUME(30, 30),
      INDEX_FUTURE_PREMIUM(31, 31),
      BID_EXCH(32, 32),
      ASK_EXCH(33, 33),
      AUCTION_VOLUME(34, 34),
      AUCTION_PRICE(35, 35),
      AUCTION_IMBALANCE(36, 36),
      MARK_PRICE(37, 37),
      BID_EFP_COMPUTATION(38, 38),
      ASK_EFP_COMPUTATION(39, 39),
      LAST_EFP_COMPUTATION(40, 40),
      OPEN_EFP_COMPUTATION(41, 41),
      HIGH_EFP_COMPUTATION(42, 42),
      LOW_EFP_COMPUTATION(43, 43),
      CLOSE_EFP_COMPUTATION(44, 44),
      LAST_TIMESTAMP(45, 45),
      SHORTABLE(46, 46),
      FUNDAMENTAL_RATIOS(47, 47),
      RT_VOLUME(48, 48),
      HALTED(49, 49),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return BID_SIZE;
          case 1: return BID;
          case 2: return ASK;
          case 3: return ASK_SIZE;
          case 4: return LAST;
          case 5: return LAST_SIZE;
          case 6: return HIGH;
          case 7: return LOW;
          case 8: return VOLUME;
          case 9: return CLOSE;
          case 10: return BID_OPTION;
          case 11: return ASK_OPTION;
          case 12: return LAST_OPTION;
          case 13: return MODEL_OPTION;
          case 14: return OPEN;
          case 15: return LOW_13_WEEK;
          case 16: return HIGH_13_WEEK;
          case 17: return LOW_26_WEEK;
          case 18: return HIGH_26_WEEK;
          case 19: return LOW_52_WEEK;
          case 20: return HIGH_52_WEEK;
          case 21: return AVG_VOLUME;
          case 22: return OPEN_INTEREST;
          case 23: return OPTION_HISTORICAL_VOL;
          case 24: return OPTION_IMPLIED_VOL;
          case 25: return OPTION_BID_EXCH;
          case 26: return OPTION_ASK_EXCH;
          case 27: return OPTION_CALL_OPEN_INTEREST;
          case 28: return OPTION_PUT_OPEN_INTEREST;
          case 29: return OPTION_CALL_VOLUME;
          case 30: return OPTION_PUT_VOLUME;
          case 31: return INDEX_FUTURE_PREMIUM;
          case 32: return BID_EXCH;
          case 33: return ASK_EXCH;
          case 34: return AUCTION_VOLUME;
          case 35: return AUCTION_PRICE;
          case 36: return AUCTION_IMBALANCE;
          case 37: return MARK_PRICE;
          case 38: return BID_EFP_COMPUTATION;
          case 39: return ASK_EFP_COMPUTATION;
          case 40: return LAST_EFP_COMPUTATION;
          case 41: return OPEN_EFP_COMPUTATION;
          case 42: return HIGH_EFP_COMPUTATION;
          case 43: return LOW_EFP_COMPUTATION;
          case 44: return CLOSE_EFP_COMPUTATION;
          case 45: return LAST_TIMESTAMP;
          case 46: return SHORTABLE;
          case 47: return FUNDAMENTAL_RATIOS;
          case 48: return RT_VOLUME;
          case 49: return HALTED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.lab616.trading.domain.DomainProtos.Tick.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE, HIGH, LOW, VOLUME, CLOSE, BID_OPTION, ASK_OPTION, LAST_OPTION, MODEL_OPTION, OPEN, LOW_13_WEEK, HIGH_13_WEEK, LOW_26_WEEK, HIGH_26_WEEK, LOW_52_WEEK, HIGH_52_WEEK, AVG_VOLUME, OPEN_INTEREST, OPTION_HISTORICAL_VOL, OPTION_IMPLIED_VOL, OPTION_BID_EXCH, OPTION_ASK_EXCH, OPTION_CALL_OPEN_INTEREST, OPTION_PUT_OPEN_INTEREST, OPTION_CALL_VOLUME, OPTION_PUT_VOLUME, INDEX_FUTURE_PREMIUM, BID_EXCH, ASK_EXCH, AUCTION_VOLUME, AUCTION_PRICE, AUCTION_IMBALANCE, MARK_PRICE, BID_EFP_COMPUTATION, ASK_EFP_COMPUTATION, LAST_EFP_COMPUTATION, OPEN_EFP_COMPUTATION, HIGH_EFP_COMPUTATION, LOW_EFP_COMPUTATION, CLOSE_EFP_COMPUTATION, LAST_TIMESTAMP, SHORTABLE, FUNDAMENTAL_RATIOS, RT_VOLUME, HALTED, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.lab616.trading.domain.DomainProtos.getDescriptor();
      }
    }
    
    // required fixed64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // required .trading.Tick.Type type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.lab616.trading.domain.DomainProtos.Tick.Type type_ = com.lab616.trading.domain.DomainProtos.Tick.Type.BID_SIZE;
    public boolean hasType() { return hasType; }
    public com.lab616.trading.domain.DomainProtos.Tick.Type getType() { return type_; }
    
    // required uint32 tickerId = 3;
    public static final int TICKERID_FIELD_NUMBER = 3;
    private boolean hasTickerId;
    private int tickerId_ = 0;
    public boolean hasTickerId() { return hasTickerId; }
    public int getTickerId() { return tickerId_; }
    
    // required double value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private boolean hasValue;
    private double value_ = 0D;
    public boolean hasValue() { return hasValue; }
    public double getValue() { return value_; }
    
    // optional .trading.Source source = 5;
    public static final int SOURCE_FIELD_NUMBER = 5;
    private boolean hasSource;
    private com.lab616.trading.domain.DomainProtos.Source source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
    public boolean hasSource() { return hasSource; }
    public com.lab616.trading.domain.DomainProtos.Source getSource() { return source_; }
    
    public final boolean isInitialized() {
      if (!hasTimestamp) return false;
      if (!hasType) return false;
      if (!hasTickerId) return false;
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasTimestamp()) {
        output.writeFixed64(1, getTimestamp());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasTickerId()) {
        output.writeUInt32(3, getTickerId());
      }
      if (hasValue()) {
        output.writeDouble(4, getValue());
      }
      if (hasSource()) {
        output.writeEnum(5, getSource().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getTimestamp());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasTickerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getTickerId());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getValue());
      }
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, getSource().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lab616.trading.domain.DomainProtos.Tick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.lab616.trading.domain.DomainProtos.Tick result;
      
      // Construct using com.lab616.trading.domain.DomainProtos.Tick.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.lab616.trading.domain.DomainProtos.Tick();
        return builder;
      }
      
      protected com.lab616.trading.domain.DomainProtos.Tick internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.lab616.trading.domain.DomainProtos.Tick();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lab616.trading.domain.DomainProtos.Tick.getDescriptor();
      }
      
      public com.lab616.trading.domain.DomainProtos.Tick getDefaultInstanceForType() {
        return com.lab616.trading.domain.DomainProtos.Tick.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.lab616.trading.domain.DomainProtos.Tick build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.lab616.trading.domain.DomainProtos.Tick buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.lab616.trading.domain.DomainProtos.Tick buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.lab616.trading.domain.DomainProtos.Tick returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lab616.trading.domain.DomainProtos.Tick) {
          return mergeFrom((com.lab616.trading.domain.DomainProtos.Tick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.lab616.trading.domain.DomainProtos.Tick other) {
        if (other == com.lab616.trading.domain.DomainProtos.Tick.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTickerId()) {
          setTickerId(other.getTickerId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setTimestamp(input.readFixed64());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Tick.Type value = com.lab616.trading.domain.DomainProtos.Tick.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 24: {
              setTickerId(input.readUInt32());
              break;
            }
            case 33: {
              setValue(input.readDouble());
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Source value = com.lab616.trading.domain.DomainProtos.Source.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                setSource(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required fixed64 timestamp = 1;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // required .trading.Tick.Type type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.lab616.trading.domain.DomainProtos.Tick.Type getType() {
        return result.getType();
      }
      public Builder setType(com.lab616.trading.domain.DomainProtos.Tick.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.lab616.trading.domain.DomainProtos.Tick.Type.BID_SIZE;
        return this;
      }
      
      // required uint32 tickerId = 3;
      public boolean hasTickerId() {
        return result.hasTickerId();
      }
      public int getTickerId() {
        return result.getTickerId();
      }
      public Builder setTickerId(int value) {
        result.hasTickerId = true;
        result.tickerId_ = value;
        return this;
      }
      public Builder clearTickerId() {
        result.hasTickerId = false;
        result.tickerId_ = 0;
        return this;
      }
      
      // required double value = 4;
      public boolean hasValue() {
        return result.hasValue();
      }
      public double getValue() {
        return result.getValue();
      }
      public Builder setValue(double value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
      
      // optional .trading.Source source = 5;
      public boolean hasSource() {
        return result.hasSource();
      }
      public com.lab616.trading.domain.DomainProtos.Source getSource() {
        return result.getSource();
      }
      public Builder setSource(com.lab616.trading.domain.DomainProtos.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
        return this;
      }
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.getDescriptor();
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_trading_Range_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_trading_Range_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_trading_Bar_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_trading_Bar_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_trading_Tick_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_trading_Tick_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014domain.proto\022\007trading\"#\n\005Range\022\r\n\005star" +
      "t\030\001 \002(\006\022\013\n\003end\030\002 \002(\006\"\272\001\n\003Bar\022\035\n\005range\030\001 " +
      "\002(\0132\016.trading.Range\022\020\n\010tickerId\030\002 \002(\004\022\r\n" +
      "\005first\030\003 \002(\001\022\014\n\004last\030\004 \002(\001\022\013\n\003min\030\005 \002(\001\022" +
      "\013\n\003max\030\006 \002(\001\022\016\n\006volume\030\007 \001(\r\022\013\n\003wap\030\010 \001(" +
      "\001\022\r\n\005count\030\t \001(\r\022\037\n\006source\030\n \001(\0162\017.tradi" +
      "ng.Source\"\247\010\n\004Tick\022\021\n\ttimestamp\030\001 \002(\006\022 \n" +
      "\004type\030\002 \002(\0162\022.trading.Tick.Type\022\020\n\010ticke" +
      "rId\030\003 \002(\r\022\r\n\005value\030\004 \002(\001\022\037\n\006source\030\005 \001(\016" +
      "2\017.trading.Source\"\247\007\n\004Type\022\014\n\010BID_SIZE\020\000",
      "\022\007\n\003BID\020\001\022\007\n\003ASK\020\002\022\014\n\010ASK_SIZE\020\003\022\010\n\004LAST" +
      "\020\004\022\r\n\tLAST_SIZE\020\005\022\010\n\004HIGH\020\006\022\007\n\003LOW\020\007\022\n\n\006" +
      "VOLUME\020\010\022\t\n\005CLOSE\020\t\022\016\n\nBID_OPTION\020\n\022\016\n\nA" +
      "SK_OPTION\020\013\022\017\n\013LAST_OPTION\020\014\022\020\n\014MODEL_OP" +
      "TION\020\r\022\010\n\004OPEN\020\016\022\017\n\013LOW_13_WEEK\020\017\022\020\n\014HIG" +
      "H_13_WEEK\020\020\022\017\n\013LOW_26_WEEK\020\021\022\020\n\014HIGH_26_" +
      "WEEK\020\022\022\017\n\013LOW_52_WEEK\020\023\022\020\n\014HIGH_52_WEEK\020" +
      "\024\022\016\n\nAVG_VOLUME\020\025\022\021\n\rOPEN_INTEREST\020\026\022\031\n\025" +
      "OPTION_HISTORICAL_VOL\020\027\022\026\n\022OPTION_IMPLIE" +
      "D_VOL\020\030\022\023\n\017OPTION_BID_EXCH\020\031\022\023\n\017OPTION_A",
      "SK_EXCH\020\032\022\035\n\031OPTION_CALL_OPEN_INTEREST\020\033" +
      "\022\034\n\030OPTION_PUT_OPEN_INTEREST\020\034\022\026\n\022OPTION" +
      "_CALL_VOLUME\020\035\022\025\n\021OPTION_PUT_VOLUME\020\036\022\030\n" +
      "\024INDEX_FUTURE_PREMIUM\020\037\022\014\n\010BID_EXCH\020 \022\014\n" +
      "\010ASK_EXCH\020!\022\022\n\016AUCTION_VOLUME\020\"\022\021\n\rAUCTI" +
      "ON_PRICE\020#\022\025\n\021AUCTION_IMBALANCE\020$\022\016\n\nMAR" +
      "K_PRICE\020%\022\027\n\023BID_EFP_COMPUTATION\020&\022\027\n\023AS" +
      "K_EFP_COMPUTATION\020\'\022\030\n\024LAST_EFP_COMPUTAT" +
      "ION\020(\022\030\n\024OPEN_EFP_COMPUTATION\020)\022\030\n\024HIGH_" +
      "EFP_COMPUTATION\020*\022\027\n\023LOW_EFP_COMPUTATION",
      "\020+\022\031\n\025CLOSE_EFP_COMPUTATION\020,\022\022\n\016LAST_TI" +
      "MESTAMP\020-\022\r\n\tSHORTABLE\020.\022\026\n\022FUNDAMENTAL_" +
      "RATIOS\020/\022\r\n\tRT_VOLUME\0200\022\n\n\006HALTED\0201*2\n\006S" +
      "ource\022\013\n\007TWS_API\020\000\022\r\n\tSIMULATED\020\001\022\014\n\010BAC" +
      "KTEST\020\002B)\n\031com.lab616.trading.domainB\014Do" +
      "mainProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_trading_Range_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_trading_Range_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_trading_Range_descriptor,
              new java.lang.String[] { "Start", "End", },
              com.lab616.trading.domain.DomainProtos.Range.class,
              com.lab616.trading.domain.DomainProtos.Range.Builder.class);
          internal_static_trading_Bar_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_trading_Bar_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_trading_Bar_descriptor,
              new java.lang.String[] { "Range", "TickerId", "First", "Last", "Min", "Max", "Volume", "Wap", "Count", "Source", },
              com.lab616.trading.domain.DomainProtos.Bar.class,
              com.lab616.trading.domain.DomainProtos.Bar.Builder.class);
          internal_static_trading_Tick_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_trading_Tick_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_trading_Tick_descriptor,
              new java.lang.String[] { "Timestamp", "Type", "TickerId", "Value", "Source", },
              com.lab616.trading.domain.DomainProtos.Tick.class,
              com.lab616.trading.domain.DomainProtos.Tick.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
