// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.lab616.trading.domain;

public final class DomainProtos {
  private DomainProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public enum DurationMicros
      implements com.google.protobuf.Internal.EnumLite {
    MILLI_1(0, 1000),
    MILLI_10(1, 10000),
    MILLI_50(2, 50000),
    MILLI_500(3, 500000),
    SEC_1(4, 1000000),
    SEC_5(5, 5000000),
    SEC_10(6, 10000000),
    SEC_30(7, 30000000),
    MIN_1(8, 60000000),
    MIN_5(9, 300000000),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static DurationMicros valueOf(int value) {
      switch (value) {
        case 1000: return MILLI_1;
        case 10000: return MILLI_10;
        case 50000: return MILLI_50;
        case 500000: return MILLI_500;
        case 1000000: return SEC_1;
        case 5000000: return SEC_5;
        case 10000000: return SEC_10;
        case 30000000: return SEC_30;
        case 60000000: return MIN_1;
        case 300000000: return MIN_5;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DurationMicros>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DurationMicros>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DurationMicros>() {
            public DurationMicros findValueByNumber(int number) {
              return DurationMicros.valueOf(number)
    ;        }
          };
    
    private final int index;
    private final int value;
    private DurationMicros(int index, int value) {
      this.index = index;
      this.value = value;
    }
  }
  
  public enum Source
      implements com.google.protobuf.Internal.EnumLite {
    TWS_API(0, 0),
    SIMULATED(1, 1),
    BACKTEST(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static Source valueOf(int value) {
      switch (value) {
        case 0: return TWS_API;
        case 1: return SIMULATED;
        case 2: return BACKTEST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Source>() {
            public Source findValueByNumber(int number) {
              return Source.valueOf(number)
    ;        }
          };
    
    private final int index;
    private final int value;
    private Source(int index, int value) {
      this.index = index;
      this.value = value;
    }
  }
  
  public static final class Interval extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Interval.newBuilder() to construct.
    private Interval() {}
    
    private static final Interval defaultInstance = new Interval();
    public static Interval getDefaultInstance() {
      return defaultInstance;
    }
    
    public Interval getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // required fixed64 start = 1;
    public static final int START_FIELD_NUMBER = 1;
    private boolean hasStart;
    private long start_ = 0L;
    public boolean hasStart() { return hasStart; }
    public long getStart() { return start_; }
    
    // required .trading.DurationMicros duration = 2;
    public static final int DURATION_FIELD_NUMBER = 2;
    private boolean hasDuration;
    private com.lab616.trading.domain.DomainProtos.DurationMicros duration_ = com.lab616.trading.domain.DomainProtos.DurationMicros.MILLI_1;
    public boolean hasDuration() { return hasDuration; }
    public com.lab616.trading.domain.DomainProtos.DurationMicros getDuration() { return duration_; }
    
    public final boolean isInitialized() {
      if (!hasStart) return false;
      if (!hasDuration) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasStart()) {
        output.writeFixed64(1, getStart());
      }
      if (hasDuration()) {
        output.writeEnum(2, getDuration().getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStart()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getStart());
      }
      if (hasDuration()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getDuration().getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Interval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lab616.trading.domain.DomainProtos.Interval prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.lab616.trading.domain.DomainProtos.Interval, Builder> {
      private com.lab616.trading.domain.DomainProtos.Interval result;
      
      // Construct using com.lab616.trading.domain.DomainProtos.Interval.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.lab616.trading.domain.DomainProtos.Interval();
        return builder;
      }
      
      protected com.lab616.trading.domain.DomainProtos.Interval internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.lab616.trading.domain.DomainProtos.Interval();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.lab616.trading.domain.DomainProtos.Interval getDefaultInstanceForType() {
        return com.lab616.trading.domain.DomainProtos.Interval.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.lab616.trading.domain.DomainProtos.Interval build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.lab616.trading.domain.DomainProtos.Interval buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.lab616.trading.domain.DomainProtos.Interval buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.lab616.trading.domain.DomainProtos.Interval returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.lab616.trading.domain.DomainProtos.Interval other) {
        if (other == com.lab616.trading.domain.DomainProtos.Interval.getDefaultInstance()) return this;
        if (other.hasStart()) {
          setStart(other.getStart());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 9: {
              setStart(input.readFixed64());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.DurationMicros value = com.lab616.trading.domain.DomainProtos.DurationMicros.valueOf(rawValue);
              if (value != null) {
                setDuration(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required fixed64 start = 1;
      public boolean hasStart() {
        return result.hasStart();
      }
      public long getStart() {
        return result.getStart();
      }
      public Builder setStart(long value) {
        result.hasStart = true;
        result.start_ = value;
        return this;
      }
      public Builder clearStart() {
        result.hasStart = false;
        result.start_ = 0L;
        return this;
      }
      
      // required .trading.DurationMicros duration = 2;
      public boolean hasDuration() {
        return result.hasDuration();
      }
      public com.lab616.trading.domain.DomainProtos.DurationMicros getDuration() {
        return result.getDuration();
      }
      public Builder setDuration(com.lab616.trading.domain.DomainProtos.DurationMicros value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDuration = true;
        result.duration_ = value;
        return this;
      }
      public Builder clearDuration() {
        result.hasDuration = false;
        result.duration_ = com.lab616.trading.domain.DomainProtos.DurationMicros.MILLI_1;
        return this;
      }
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.internalForceInit();
    }
  }
  
  public static final class Bar extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Bar.newBuilder() to construct.
    private Bar() {}
    
    private static final Bar defaultInstance = new Bar();
    public static Bar getDefaultInstance() {
      return defaultInstance;
    }
    
    public Bar getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      TRADES(0, 0),
      MIDPOINT(1, 1),
      BID(2, 2),
      ASK(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return TRADES;
          case 1: return MIDPOINT;
          case 2: return BID;
          case 3: return ASK;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
    }
    
    // required .trading.Interval interval = 1;
    public static final int INTERVAL_FIELD_NUMBER = 1;
    private boolean hasInterval;
    private com.lab616.trading.domain.DomainProtos.Interval interval_ = com.lab616.trading.domain.DomainProtos.Interval.getDefaultInstance();
    public boolean hasInterval() { return hasInterval; }
    public com.lab616.trading.domain.DomainProtos.Interval getInterval() { return interval_; }
    
    // required .trading.Bar.Type type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.lab616.trading.domain.DomainProtos.Bar.Type type_ = com.lab616.trading.domain.DomainProtos.Bar.Type.TRADES;
    public boolean hasType() { return hasType; }
    public com.lab616.trading.domain.DomainProtos.Bar.Type getType() { return type_; }
    
    // required uint64 tickerId = 3;
    public static final int TICKERID_FIELD_NUMBER = 3;
    private boolean hasTickerId;
    private long tickerId_ = 0L;
    public boolean hasTickerId() { return hasTickerId; }
    public long getTickerId() { return tickerId_; }
    
    // required double first = 4;
    public static final int FIRST_FIELD_NUMBER = 4;
    private boolean hasFirst;
    private double first_ = 0D;
    public boolean hasFirst() { return hasFirst; }
    public double getFirst() { return first_; }
    
    // required double last = 5;
    public static final int LAST_FIELD_NUMBER = 5;
    private boolean hasLast;
    private double last_ = 0D;
    public boolean hasLast() { return hasLast; }
    public double getLast() { return last_; }
    
    // required double min = 6;
    public static final int MIN_FIELD_NUMBER = 6;
    private boolean hasMin;
    private double min_ = 0D;
    public boolean hasMin() { return hasMin; }
    public double getMin() { return min_; }
    
    // required double max = 7;
    public static final int MAX_FIELD_NUMBER = 7;
    private boolean hasMax;
    private double max_ = 0D;
    public boolean hasMax() { return hasMax; }
    public double getMax() { return max_; }
    
    // required .trading.Source source = 8;
    public static final int SOURCE_FIELD_NUMBER = 8;
    private boolean hasSource;
    private com.lab616.trading.domain.DomainProtos.Source source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
    public boolean hasSource() { return hasSource; }
    public com.lab616.trading.domain.DomainProtos.Source getSource() { return source_; }
    
    // optional uint32 volume = 9;
    public static final int VOLUME_FIELD_NUMBER = 9;
    private boolean hasVolume;
    private int volume_ = 0;
    public boolean hasVolume() { return hasVolume; }
    public int getVolume() { return volume_; }
    
    // optional double wap = 10;
    public static final int WAP_FIELD_NUMBER = 10;
    private boolean hasWap;
    private double wap_ = 0D;
    public boolean hasWap() { return hasWap; }
    public double getWap() { return wap_; }
    
    // optional uint32 count = 11;
    public static final int COUNT_FIELD_NUMBER = 11;
    private boolean hasCount;
    private int count_ = 0;
    public boolean hasCount() { return hasCount; }
    public int getCount() { return count_; }
    
    public final boolean isInitialized() {
      if (!hasInterval) return false;
      if (!hasType) return false;
      if (!hasTickerId) return false;
      if (!hasFirst) return false;
      if (!hasLast) return false;
      if (!hasMin) return false;
      if (!hasMax) return false;
      if (!hasSource) return false;
      if (!getInterval().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasInterval()) {
        output.writeMessage(1, getInterval());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasTickerId()) {
        output.writeUInt64(3, getTickerId());
      }
      if (hasFirst()) {
        output.writeDouble(4, getFirst());
      }
      if (hasLast()) {
        output.writeDouble(5, getLast());
      }
      if (hasMin()) {
        output.writeDouble(6, getMin());
      }
      if (hasMax()) {
        output.writeDouble(7, getMax());
      }
      if (hasSource()) {
        output.writeEnum(8, getSource().getNumber());
      }
      if (hasVolume()) {
        output.writeUInt32(9, getVolume());
      }
      if (hasWap()) {
        output.writeDouble(10, getWap());
      }
      if (hasCount()) {
        output.writeUInt32(11, getCount());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasInterval()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInterval());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasTickerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getTickerId());
      }
      if (hasFirst()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getFirst());
      }
      if (hasLast()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, getLast());
      }
      if (hasMin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, getMin());
      }
      if (hasMax()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, getMax());
      }
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, getSource().getNumber());
      }
      if (hasVolume()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, getVolume());
      }
      if (hasWap()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, getWap());
      }
      if (hasCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, getCount());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Bar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lab616.trading.domain.DomainProtos.Bar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.lab616.trading.domain.DomainProtos.Bar, Builder> {
      private com.lab616.trading.domain.DomainProtos.Bar result;
      
      // Construct using com.lab616.trading.domain.DomainProtos.Bar.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.lab616.trading.domain.DomainProtos.Bar();
        return builder;
      }
      
      protected com.lab616.trading.domain.DomainProtos.Bar internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.lab616.trading.domain.DomainProtos.Bar();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.lab616.trading.domain.DomainProtos.Bar getDefaultInstanceForType() {
        return com.lab616.trading.domain.DomainProtos.Bar.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.lab616.trading.domain.DomainProtos.Bar build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.lab616.trading.domain.DomainProtos.Bar buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.lab616.trading.domain.DomainProtos.Bar buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.lab616.trading.domain.DomainProtos.Bar returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.lab616.trading.domain.DomainProtos.Bar other) {
        if (other == com.lab616.trading.domain.DomainProtos.Bar.getDefaultInstance()) return this;
        if (other.hasInterval()) {
          mergeInterval(other.getInterval());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTickerId()) {
          setTickerId(other.getTickerId());
        }
        if (other.hasFirst()) {
          setFirst(other.getFirst());
        }
        if (other.hasLast()) {
          setLast(other.getLast());
        }
        if (other.hasMin()) {
          setMin(other.getMin());
        }
        if (other.hasMax()) {
          setMax(other.getMax());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasWap()) {
          setWap(other.getWap());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              com.lab616.trading.domain.DomainProtos.Interval.Builder subBuilder = com.lab616.trading.domain.DomainProtos.Interval.newBuilder();
              if (hasInterval()) {
                subBuilder.mergeFrom(getInterval());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInterval(subBuilder.buildPartial());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Bar.Type value = com.lab616.trading.domain.DomainProtos.Bar.Type.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 24: {
              setTickerId(input.readUInt64());
              break;
            }
            case 33: {
              setFirst(input.readDouble());
              break;
            }
            case 41: {
              setLast(input.readDouble());
              break;
            }
            case 49: {
              setMin(input.readDouble());
              break;
            }
            case 57: {
              setMax(input.readDouble());
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Source value = com.lab616.trading.domain.DomainProtos.Source.valueOf(rawValue);
              if (value != null) {
                setSource(value);
              }
              break;
            }
            case 72: {
              setVolume(input.readUInt32());
              break;
            }
            case 81: {
              setWap(input.readDouble());
              break;
            }
            case 88: {
              setCount(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required .trading.Interval interval = 1;
      public boolean hasInterval() {
        return result.hasInterval();
      }
      public com.lab616.trading.domain.DomainProtos.Interval getInterval() {
        return result.getInterval();
      }
      public Builder setInterval(com.lab616.trading.domain.DomainProtos.Interval value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasInterval = true;
        result.interval_ = value;
        return this;
      }
      public Builder setInterval(com.lab616.trading.domain.DomainProtos.Interval.Builder builderForValue) {
        result.hasInterval = true;
        result.interval_ = builderForValue.build();
        return this;
      }
      public Builder mergeInterval(com.lab616.trading.domain.DomainProtos.Interval value) {
        if (result.hasInterval() &&
            result.interval_ != com.lab616.trading.domain.DomainProtos.Interval.getDefaultInstance()) {
          result.interval_ =
            com.lab616.trading.domain.DomainProtos.Interval.newBuilder(result.interval_).mergeFrom(value).buildPartial();
        } else {
          result.interval_ = value;
        }
        result.hasInterval = true;
        return this;
      }
      public Builder clearInterval() {
        result.hasInterval = false;
        result.interval_ = com.lab616.trading.domain.DomainProtos.Interval.getDefaultInstance();
        return this;
      }
      
      // required .trading.Bar.Type type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.lab616.trading.domain.DomainProtos.Bar.Type getType() {
        return result.getType();
      }
      public Builder setType(com.lab616.trading.domain.DomainProtos.Bar.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.lab616.trading.domain.DomainProtos.Bar.Type.TRADES;
        return this;
      }
      
      // required uint64 tickerId = 3;
      public boolean hasTickerId() {
        return result.hasTickerId();
      }
      public long getTickerId() {
        return result.getTickerId();
      }
      public Builder setTickerId(long value) {
        result.hasTickerId = true;
        result.tickerId_ = value;
        return this;
      }
      public Builder clearTickerId() {
        result.hasTickerId = false;
        result.tickerId_ = 0L;
        return this;
      }
      
      // required double first = 4;
      public boolean hasFirst() {
        return result.hasFirst();
      }
      public double getFirst() {
        return result.getFirst();
      }
      public Builder setFirst(double value) {
        result.hasFirst = true;
        result.first_ = value;
        return this;
      }
      public Builder clearFirst() {
        result.hasFirst = false;
        result.first_ = 0D;
        return this;
      }
      
      // required double last = 5;
      public boolean hasLast() {
        return result.hasLast();
      }
      public double getLast() {
        return result.getLast();
      }
      public Builder setLast(double value) {
        result.hasLast = true;
        result.last_ = value;
        return this;
      }
      public Builder clearLast() {
        result.hasLast = false;
        result.last_ = 0D;
        return this;
      }
      
      // required double min = 6;
      public boolean hasMin() {
        return result.hasMin();
      }
      public double getMin() {
        return result.getMin();
      }
      public Builder setMin(double value) {
        result.hasMin = true;
        result.min_ = value;
        return this;
      }
      public Builder clearMin() {
        result.hasMin = false;
        result.min_ = 0D;
        return this;
      }
      
      // required double max = 7;
      public boolean hasMax() {
        return result.hasMax();
      }
      public double getMax() {
        return result.getMax();
      }
      public Builder setMax(double value) {
        result.hasMax = true;
        result.max_ = value;
        return this;
      }
      public Builder clearMax() {
        result.hasMax = false;
        result.max_ = 0D;
        return this;
      }
      
      // required .trading.Source source = 8;
      public boolean hasSource() {
        return result.hasSource();
      }
      public com.lab616.trading.domain.DomainProtos.Source getSource() {
        return result.getSource();
      }
      public Builder setSource(com.lab616.trading.domain.DomainProtos.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
        return this;
      }
      
      // optional uint32 volume = 9;
      public boolean hasVolume() {
        return result.hasVolume();
      }
      public int getVolume() {
        return result.getVolume();
      }
      public Builder setVolume(int value) {
        result.hasVolume = true;
        result.volume_ = value;
        return this;
      }
      public Builder clearVolume() {
        result.hasVolume = false;
        result.volume_ = 0;
        return this;
      }
      
      // optional double wap = 10;
      public boolean hasWap() {
        return result.hasWap();
      }
      public double getWap() {
        return result.getWap();
      }
      public Builder setWap(double value) {
        result.hasWap = true;
        result.wap_ = value;
        return this;
      }
      public Builder clearWap() {
        result.hasWap = false;
        result.wap_ = 0D;
        return this;
      }
      
      // optional uint32 count = 11;
      public boolean hasCount() {
        return result.hasCount();
      }
      public int getCount() {
        return result.getCount();
      }
      public Builder setCount(int value) {
        result.hasCount = true;
        result.count_ = value;
        return this;
      }
      public Builder clearCount() {
        result.hasCount = false;
        result.count_ = 0;
        return this;
      }
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.internalForceInit();
    }
  }
  
  public static final class Tick extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Tick.newBuilder() to construct.
    private Tick() {}
    
    private static final Tick defaultInstance = new Tick();
    public static Tick getDefaultInstance() {
      return defaultInstance;
    }
    
    public Tick getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      BID_SIZE(0, 0),
      BID(1, 1),
      ASK(2, 2),
      ASK_SIZE(3, 3),
      LAST(4, 4),
      LAST_SIZE(5, 5),
      HIGH(6, 6),
      LOW(7, 7),
      VOLUME(8, 8),
      CLOSE(9, 9),
      BID_OPTION(10, 10),
      ASK_OPTION(11, 11),
      LAST_OPTION(12, 12),
      MODEL_OPTION(13, 13),
      OPEN(14, 14),
      LOW_13_WEEK(15, 15),
      HIGH_13_WEEK(16, 16),
      LOW_26_WEEK(17, 17),
      HIGH_26_WEEK(18, 18),
      LOW_52_WEEK(19, 19),
      HIGH_52_WEEK(20, 20),
      AVG_VOLUME(21, 21),
      OPEN_INTEREST(22, 22),
      OPTION_HISTORICAL_VOL(23, 23),
      OPTION_IMPLIED_VOL(24, 24),
      OPTION_BID_EXCH(25, 25),
      OPTION_ASK_EXCH(26, 26),
      OPTION_CALL_OPEN_INTEREST(27, 27),
      OPTION_PUT_OPEN_INTEREST(28, 28),
      OPTION_CALL_VOLUME(29, 29),
      OPTION_PUT_VOLUME(30, 30),
      INDEX_FUTURE_PREMIUM(31, 31),
      BID_EXCH(32, 32),
      ASK_EXCH(33, 33),
      AUCTION_VOLUME(34, 34),
      AUCTION_PRICE(35, 35),
      AUCTION_IMBALANCE(36, 36),
      MARK_PRICE(37, 37),
      BID_EFP_COMPUTATION(38, 38),
      ASK_EFP_COMPUTATION(39, 39),
      LAST_EFP_COMPUTATION(40, 40),
      OPEN_EFP_COMPUTATION(41, 41),
      HIGH_EFP_COMPUTATION(42, 42),
      LOW_EFP_COMPUTATION(43, 43),
      CLOSE_EFP_COMPUTATION(44, 44),
      LAST_TIMESTAMP(45, 45),
      SHORTABLE(46, 46),
      FUNDAMENTAL_RATIOS(47, 47),
      RT_VOLUME(48, 48),
      HALTED(49, 49),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return BID_SIZE;
          case 1: return BID;
          case 2: return ASK;
          case 3: return ASK_SIZE;
          case 4: return LAST;
          case 5: return LAST_SIZE;
          case 6: return HIGH;
          case 7: return LOW;
          case 8: return VOLUME;
          case 9: return CLOSE;
          case 10: return BID_OPTION;
          case 11: return ASK_OPTION;
          case 12: return LAST_OPTION;
          case 13: return MODEL_OPTION;
          case 14: return OPEN;
          case 15: return LOW_13_WEEK;
          case 16: return HIGH_13_WEEK;
          case 17: return LOW_26_WEEK;
          case 18: return HIGH_26_WEEK;
          case 19: return LOW_52_WEEK;
          case 20: return HIGH_52_WEEK;
          case 21: return AVG_VOLUME;
          case 22: return OPEN_INTEREST;
          case 23: return OPTION_HISTORICAL_VOL;
          case 24: return OPTION_IMPLIED_VOL;
          case 25: return OPTION_BID_EXCH;
          case 26: return OPTION_ASK_EXCH;
          case 27: return OPTION_CALL_OPEN_INTEREST;
          case 28: return OPTION_PUT_OPEN_INTEREST;
          case 29: return OPTION_CALL_VOLUME;
          case 30: return OPTION_PUT_VOLUME;
          case 31: return INDEX_FUTURE_PREMIUM;
          case 32: return BID_EXCH;
          case 33: return ASK_EXCH;
          case 34: return AUCTION_VOLUME;
          case 35: return AUCTION_PRICE;
          case 36: return AUCTION_IMBALANCE;
          case 37: return MARK_PRICE;
          case 38: return BID_EFP_COMPUTATION;
          case 39: return ASK_EFP_COMPUTATION;
          case 40: return LAST_EFP_COMPUTATION;
          case 41: return OPEN_EFP_COMPUTATION;
          case 42: return HIGH_EFP_COMPUTATION;
          case 43: return LOW_EFP_COMPUTATION;
          case 44: return CLOSE_EFP_COMPUTATION;
          case 45: return LAST_TIMESTAMP;
          case 46: return SHORTABLE;
          case 47: return FUNDAMENTAL_RATIOS;
          case 48: return RT_VOLUME;
          case 49: return HALTED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
    }
    
    // required fixed64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // required .trading.Tick.Type type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private com.lab616.trading.domain.DomainProtos.Tick.Type type_ = com.lab616.trading.domain.DomainProtos.Tick.Type.BID_SIZE;
    public boolean hasType() { return hasType; }
    public com.lab616.trading.domain.DomainProtos.Tick.Type getType() { return type_; }
    
    // required uint32 tickerId = 3;
    public static final int TICKERID_FIELD_NUMBER = 3;
    private boolean hasTickerId;
    private int tickerId_ = 0;
    public boolean hasTickerId() { return hasTickerId; }
    public int getTickerId() { return tickerId_; }
    
    // required double value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private boolean hasValue;
    private double value_ = 0D;
    public boolean hasValue() { return hasValue; }
    public double getValue() { return value_; }
    
    // optional .trading.Source source = 5;
    public static final int SOURCE_FIELD_NUMBER = 5;
    private boolean hasSource;
    private com.lab616.trading.domain.DomainProtos.Source source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
    public boolean hasSource() { return hasSource; }
    public com.lab616.trading.domain.DomainProtos.Source getSource() { return source_; }
    
    public final boolean isInitialized() {
      if (!hasTimestamp) return false;
      if (!hasType) return false;
      if (!hasTickerId) return false;
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasTimestamp()) {
        output.writeFixed64(1, getTimestamp());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasTickerId()) {
        output.writeUInt32(3, getTickerId());
      }
      if (hasValue()) {
        output.writeDouble(4, getValue());
      }
      if (hasSource()) {
        output.writeEnum(5, getSource().getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, getTimestamp());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasTickerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getTickerId());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, getValue());
      }
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, getSource().getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.lab616.trading.domain.DomainProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lab616.trading.domain.DomainProtos.Tick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.lab616.trading.domain.DomainProtos.Tick, Builder> {
      private com.lab616.trading.domain.DomainProtos.Tick result;
      
      // Construct using com.lab616.trading.domain.DomainProtos.Tick.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.lab616.trading.domain.DomainProtos.Tick();
        return builder;
      }
      
      protected com.lab616.trading.domain.DomainProtos.Tick internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.lab616.trading.domain.DomainProtos.Tick();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.lab616.trading.domain.DomainProtos.Tick getDefaultInstanceForType() {
        return com.lab616.trading.domain.DomainProtos.Tick.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.lab616.trading.domain.DomainProtos.Tick build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.lab616.trading.domain.DomainProtos.Tick buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.lab616.trading.domain.DomainProtos.Tick buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.lab616.trading.domain.DomainProtos.Tick returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.lab616.trading.domain.DomainProtos.Tick other) {
        if (other == com.lab616.trading.domain.DomainProtos.Tick.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTickerId()) {
          setTickerId(other.getTickerId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 9: {
              setTimestamp(input.readFixed64());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Tick.Type value = com.lab616.trading.domain.DomainProtos.Tick.Type.valueOf(rawValue);
              if (value != null) {
                setType(value);
              }
              break;
            }
            case 24: {
              setTickerId(input.readUInt32());
              break;
            }
            case 33: {
              setValue(input.readDouble());
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.lab616.trading.domain.DomainProtos.Source value = com.lab616.trading.domain.DomainProtos.Source.valueOf(rawValue);
              if (value != null) {
                setSource(value);
              }
              break;
            }
          }
        }
      }
      
      
      // required fixed64 timestamp = 1;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // required .trading.Tick.Type type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public com.lab616.trading.domain.DomainProtos.Tick.Type getType() {
        return result.getType();
      }
      public Builder setType(com.lab616.trading.domain.DomainProtos.Tick.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.lab616.trading.domain.DomainProtos.Tick.Type.BID_SIZE;
        return this;
      }
      
      // required uint32 tickerId = 3;
      public boolean hasTickerId() {
        return result.hasTickerId();
      }
      public int getTickerId() {
        return result.getTickerId();
      }
      public Builder setTickerId(int value) {
        result.hasTickerId = true;
        result.tickerId_ = value;
        return this;
      }
      public Builder clearTickerId() {
        result.hasTickerId = false;
        result.tickerId_ = 0;
        return this;
      }
      
      // required double value = 4;
      public boolean hasValue() {
        return result.hasValue();
      }
      public double getValue() {
        return result.getValue();
      }
      public Builder setValue(double value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
      
      // optional .trading.Source source = 5;
      public boolean hasSource() {
        return result.hasSource();
      }
      public com.lab616.trading.domain.DomainProtos.Source getSource() {
        return result.getSource();
      }
      public Builder setSource(com.lab616.trading.domain.DomainProtos.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = com.lab616.trading.domain.DomainProtos.Source.TWS_API;
        return this;
      }
    }
    
    static {
      com.lab616.trading.domain.DomainProtos.internalForceInit();
    }
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
}
